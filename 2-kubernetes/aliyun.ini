# inventory
[nodes]
node1 ansible_host=192.168.101.11
node2 ansible_host=192.168.101.12
node3 ansible_host=192.168.102.11

[load_balancer]
node1 #STATE=MASTER INTERFACE=eth0 ROUTER_ID1=10 PRIORITY=150 AUTH_PASS1=1010 VIP_SUB=192.168.3 VIP_MASK=24 ROUTER_ID2=252 SRC_IP=192.168.101.11 PEER_IP=192.168.101.12
node2 #STATE=BACKUP INTERFACE=eth0 ROUTER_ID1=10 PRIORITY=100 AUTH_PASS1=1010 VIP_SUB=192.168.3 VIP_MASK=24 ROUTER_ID2=251 SRC_IP=192.168.101.12 PEER_IP=192.168.101.11

[kube_node]
node1
node2
node3

[kube_master]
node1
node2
node3

[kube_worker]

[kube_client]
node1
node2
node3

[all:vars]
deploy_dir = /opt/kubernetes
deploy_user = myadmin

# ssh via normal user
ansible_user = myadmin
ansible_python_interpreter=/usr/bin/python3

# docker config
docker_dns = ["192.168.101.11", "192.168.102.11"]
docker_registry_mirrors = ["https://jfb4kjfb.mirror.aliyuncs.com"]
docker_insecure_registries = ["http://dockerhub:5000"]

# keepalived conf
#keepalived_enable_check = True
#keepalived_script_user = root
#keepalived_vrrp_script_name = check_haproxy
#keepalived_vrrp_instance_name = haproxy
#
#keepalived_communication_type = multicast
#
#keepalived_notify_script_name = vip
#keepalived_access_key_id = 'accessKeyId'
#keepalived_access_secret = 'accessSecret'
#keepalived_region_id = 'cn-hangzhou'
#keepalived_master_eid = 'eni-1'
#keepalived_backup_eid = 'eni-2'

# kubernetes config
kube_api_version = "kubeadm.k8s.io/v1beta2"
kube_kubernetes_version = "1.16.0"
kube_image_repository = "registry.aliyuncs.com/google_containers"
kube_api_server_host = "kubapi"
kube_api_server_port = 64436
kube_service_subnet = "10.244.0.0/16"
kube_pod_subnet = "10.243.0.0/16"
kube_etc_data_dir = "/var/lib/etcd"

# kube vip config
lb_kube_vip_addr = "192.168.3.10"
lb_kube_vip_if = "eth0"
lb_kube_apiserver_dest_port = 64436
lb_kube_apiserver_src_port = 6443
