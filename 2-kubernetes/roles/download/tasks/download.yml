---

# get packages state
- name: generate packages info file without state
  template: src={{ src_pkgs_file_name }} dest={{ local_conf_dir }}/{{ dest_pkgs_file_name }}

- include_vars: file={{ local_conf_dir }}/{{ dest_pkgs_file_name }}

- name: check package tar file exists
  stat:
    path:  "{{ local_download_dir }}/{{ item.name }}-{{ item.version }}.{{ pkgs_file_suffix }}"
  with_items: "{{ packages_info }}"
  register: "package_tar_st"

- name: generate packages state file with state
  template: src={{ src_pkgs_file_name }} dest={{ local_conf_dir }}/{{ dest_pkgs_file_name }}


# download packages
- include_vars: file={{ local_conf_dir }}/{{ dest_pkgs_file_name }}

- name: download package packages
  get_url:
    url: "{{ item.url }}"
    dest: "{{ local_download_dir }}/{{ item.name }}-{{ item.version }}.{{ pkgs_file_suffix }}"
    owner: "{{ deploy_user }}"
    group: "{{ deploy_user }}"
    checksum: "{{ item.checksum | default(omit) }}"
    force: yes
    validate_certs: no
  register: get_url_result
  until: "'OK' in get_url_result.msg or 'file already exists' in get_url_result.msg"
  retries: 4
  delay: "{{ 5 | random + 3 }}"
  with_items: "{{ packages_info }}"
  when: has_internal_network and not item.state
